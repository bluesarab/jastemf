/**
 * <copyright>
 *
 * This program and the accompanying materials are made available under the
 * terms of the BSD 3-clause license which accompanies this distribution.
 *
 * </copyright>
 */

/**
 * @author C. BÃ¼rger
 */
aspect TypeCoercions {
	// Coercion can only happen once! The following hack --- to use a flag to
	// test for rewrite applicability --- avoids horrible execution times and
	// memory requirements because of JastAdd's bad rewrite implementation.
	
	private boolean BinaryExpression.coercionTested = false;
	private boolean VariableAssignment.coercionTested = false;
	
	rewrite BinaryExpression {
		when (!coercionTested)
		to BinaryExpression {
			coercionTested = true;
			if (getOperand1().Type().isReal() &&
					getOperand2().Type().isInteger())
				setOperand2(new RealCoercion(getOperand2()));
			else if (getOperand1().Type().isInteger() &&
					getOperand2().Type().isReal())
				setOperand1(new RealCoercion(getOperand1()));
			return this;
		}
	}
	
	rewrite VariableAssignment {
		when (!coercionTested)
		to VariableAssignment {
			coercionTested = true;
			if (getRValue().Type().isInteger() &&
					getLValue().Type().isPointer() &&
					getLValue().Type().rtype.isReal()) {
				setRValue(new RealCoercion(getRValue()));
			}
			return this;
		}
	}
}
