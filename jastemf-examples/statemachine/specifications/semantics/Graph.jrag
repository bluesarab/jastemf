import java.util.*;
aspect Graph {
  coll Set<Transition> State.transitions() [new HashSet<Transition>()] with add;
  
  Transition contributes this
    when source() != null
    to State.transitions()
    for source();
  
 	syn EList State.successors() circular [new EObjectEList(State.class,this,StatemachinePackage.STATE__SUCCESSORS)] ;
 	eq State.successors() {
    EList result = new EObjectEList(State.class,this,StatemachinePackage.STATE__SUCCESSORS);
    for (Transition t : transitions()) {
      if (t.target() != null) transactionalAdd(result,t.target());
    }
    return result;
  }

}