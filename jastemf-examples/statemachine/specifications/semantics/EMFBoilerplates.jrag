/**
 * <copyright>
 *
 * This program and the accompanying materials are made available under the
 * terms of the BSD 3-clause license which accompanies this distribution.
 *
 * </copyright>
 */
import org.eclipse.emf.transaction.TransactionalEditingDomain;
import org.eclipse.emf.transaction.util.TransactionUtil;
import org.eclipse.emf.common.command.AbstractCommand;
import org.eclipse.emf.common.command.Command;

aspect EMFBoilerplates{
	public static void ASTNode.transactionalAdd(final EList target, final EObject object) {
		TransactionalEditingDomain eDomain = TransactionUtil.getEditingDomain(object);
		if (eDomain != null) {
			Command cmd = new AbstractCommand() {
				public void execute() {target.add(object);}
				public void redo() {target.add(object);}
				public boolean prepare(){return true;}
			};
			eDomain.getCommandStack().execute(cmd);		
		}	
		else {target.add(object);}
	}
}
